[*
[
3449091456,
2*x^4 + 9*x^3 - 15*x^2 + 7*x - 1
],
[
[ 0, 1, 0 ],
[ 0, -1, 1 ],
[ 1/2, 0, 1 ]
],
true, [* [* 5,
[
[ 21177841250379, 5, 20 ]
],
[
[ 1, 5, 11 ]
],
[],
[]
*], [* 7,
[],
[],
[],
[]
*], [* 11,
[],
[
[ 1, 11, 20 ]
],
[],
[]
*], [* 13,
[],
[],
[],
[
[ 13, 45, 100 ]
]
*] *]
*]

The point (1,2^(1/3),1) - (0,1,0) is 9-torsion.

[*
[
39020838912,
4*x^4 + 8*x^3 - 6*x^2 + x
],
[
[ 1/4, 1/4, 1 ],
[ 0, 1, 0 ],
[ 0, 0, 1 ]
],
true, [* [* 5,
[],
[
[ -122070312, 5, 12 ]
],
[],
[]
*], [* 7,
[
[ 28627862437315436, 7, 20 ]
],
[],
[],
[]
*], [* 11 *], [* 13,
[],
[],
[],
[
[ 13, 45, 100 ]
]
*] *]
*]

The point over the 5-adics appears to have x = 1/2, y = (1/4)^(1/3). Since 11 has bad reduction, we don't see this over the 11-adics. This is 4-torsion.

[*
[
341190475776,
2*x^4 + 4*x^3 + 6*x^2 + 2*x
],
[
[ -1/2, 1/2, 1 ],
[ 0, 1, 0 ],
[ 0, 0, 1 ]
],
true, [* [* 5,
[
[ -27221188574837, 5, 20 ]
],
[
[ -1, 5, 12 ]
],
[],
[]
*], [* 7,
[
[ -25930567663067339, 7, 20 ]
],
[],
[],
[]
*], [* 11,
[
[ 95098167046072782967967912097505720, 11, 35 ]
],
[
[ -1, 11, 20 ]
],
[],
[]
*], [* 13,
[],
[],
[],
[
[ 13, 45, 100 ]
]
*] *]
*]

(-1, 2^(1/3),1) - (0,1,0) is a 9-torsion point on the curve.

[*
[
411210307584,
2*x^4 + 25*x^3 - 39*x^2 + 19*x - 3
],
[
[ 0, 1, 0 ],
[ 1/2, 0, 1 ]
],
true, [* [* 5,
[],
[],
[
[ 1, 5, 9 ]
],
[]
*], [* 7,
[
[ 30264518380174665, 7, 20 ]
],
[],
[],
[]
*], [* 11,
[
[ 2365945526020661241, 11, 18 ]
],
[
[ 1, 11, 6 ]
],
[],
[]
*], [* 13,
[],
[],
[],
[]
*] *]
*]

(1,4^(1/3),1) - (0,1,0) is a 9-torsion point.


[*
[
673140964032,
4*x^4 + 7*x^3 + 2*x^2 + 1
],
[[0,1,0], [-1 , 0 , 1], [0, 1 , 1] ]

[*
[ -29810560475997424, 7, 20 ],
[ 30450958667016325, 7, 20 ],
[ -20588464765421902, 7, 20 ],
[ -508776004930622828, 11, 18 ],
[ -169, 13, 1 ],
[ -676, 13, 1 ]
*]
*]

This was done manually because torsion_test had an error on this
 curve.
- the 7-adic extras are Weierstrass points
- the 11-adic extra is a Weierstrass point
- I do not really get the 13-adic extras. They are present when
 running coleman_data(), effective_chabauty() for N (precision) = 20,
 but are NOT present when I run it with N = 30. Perhaps it has
 something to do with having insufficient precision to distinguish
 between the rational x coordinate of 0 and the apparent extra points
 which look like zero mod 13^2.  



Below are the curves which are not from rank1fromrte.txt.
[*
[
465670176768,
x^4 + 12*x^3 - 18*x^2 + 8*x - 1
],
[
[ 0, 1, 0 ],
[ 0, -1, 1 ]
],
true, [* [* 5,
[
[ 1206110487587, 5, 20 ]
],
[
[ 1, 5, 15 ]
],
[],
[]
*], [* 7,
[
[ -16143149839158262, 7, 20 ]
],
[],
[],
[]
*], [* 11,
[
[ 192046846046401722656629174931711080, 11, 35 ]
],
[
[ 1, 11, 33 ]
],
[],
[]
*], [* 13,
[],
[],
[],
[
[ 13, 45, 100 ]
]
*] *]
*]

(1,2^(1/3),1) - (0,1,0) is a 4-torsion point.

[*
[
431945895375,
5*x^4 + 8*x^3 + 6*x^2 + x
],
[
[ 1/5, 4/5, 1 ],
[ 0, 1, 0 ],
[ 0, 0, 1 ]
],
false, [* [* 5 *], [* 7,
[],
[],
[
[ 56495050, 7, 10 ]
],
[]
*], [* 11,
[
[ -718510530375346110096422739026651005, 11, 35 ]
],
[],
[
[ -134549998986512001840, 11, 20 ]
],
[]
*], [* 13,
[],
[],
[],
[
[ 13, 45, 100 ]
]
*] *]
*]

The 7-adic and 11-adic points appear to be (1/5,4/5) -- did we not fix the precision issues completely? (I checked and there are three candidate rational points on effective_chabauty, and three rational points so I think we aren't throwing away points in compare.)
